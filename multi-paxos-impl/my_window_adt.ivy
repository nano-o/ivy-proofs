#lang ivy1.7

include window_adt

module my_window(domain,range,none,arr_t) = { # TODO: renaming arr_t to arr causes mayhem becauase it clashes with arr defined in window_adt.ivy, but this is not detected as a problem by Ivy.
    instantiate window(domain,range,none)
    action make_from_array(i:domain, a:arr_t) returns (w:this)
    specification {
        around make_from_array {
            require 0 <= i & i < a.end;
            ...
            ensure begin(w,I) <-> I = i;
            ensure i <= I & I < a.end & a.value(I) = V -> value(w, I, V);
            ensure (I < i | a.end <= I) -> (value(w, I, V) <-> V = none);
        }
    }
    implementation {
        implement make_from_array {
            w := empty(i);
            var j := i;
            while (j < a.end)
            invariant i <= j
            invariant j <= a.end
            invariant i <= J & J < j -> w.value(J,a.value(J))
            invariant w.begin(i)
            invariant j <= J -> w.value(J,none)
            {
                w := w.set(j, a.value(j));
                j := j.next;
            }
        }
    }
}

# test

# include common

# instance foo : my_window(inst_t,vote_struct,not_a_vote,votemap)

# export foo.set
# export foo.read
# export foo.trim
# export foo.empty
# export foo.getBegin
# export foo.getEnd
# export foo.make
# export foo.make_from_array

# isolate test = foo with arr, slot

# interpret value_t -> strlit

# extract code = foo, inst_t, not_a_vote_def, votemap, round_t
