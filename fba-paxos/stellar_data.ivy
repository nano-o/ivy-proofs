#lang ivy1.8

module scp_nodeid = {
    type this
    alias t = this
}

module scp_qset = {
    type this
    alias t = this

    specification {
    }

    implementation {
        interpret t -> <<< paxos_adapter::AdaptedQSet >>>

        # header hook adds things to paxos.h before the paxos class
        <<< header
        // FIXME HEADER LOC
        >>>

        # member hook adds things to paxos.h within the paxos class
        <<< member
        // FIXME MEMBER LOC
        >>>

        # impl hook adds things to paxos.cpp
        <<< impl
        // FIXME IMPL LOC

        template<>
        void __ser<`t`>(ivy_ser&, `t` const&)
        {
            // TODO
        }

        template<>
        void __deser<`t`>(ivy_deser&, `t`&)
        {
            // TODO
        }

        template<>
        `t` _arg<`t`>(std::__1::vector<ivy_value, std::__1::allocator<ivy_value>>&, unsigned int, long long)
        {
            // TODO
        }

        >>>

        # encode hook adds things to paxos.cpp right after the impl hook
        <<< encode `t`
        // FIXME encode `t` loc
        >>>

        # init hook adds lines to the `paxos::paxos()` constructor
        <<< init
        // FIXME INIT LOC
        >>>
    }
}
