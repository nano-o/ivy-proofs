#lang ivy1.8

module scp_nodeid = {
    type this
    alias t = this
}

module scp_qset = {
    type this
    alias t = this

    action load returns (s:t)

    specification {
    }

    implementation {
        interpret t -> <<< paxos_adapter::AdaptedQSet >>>

        implement load {
            <<<
            std::fstream str("qset_config.json");
            `s`.paxos_adapter::AdaptedQSet::operator=(load_jqset(str));
            >>>
        }

        <<< impl

        template<>
        void __ser<`t`>(ivy_ser& res, `t` const& qs)
        {
            res.set(qs.encode());
        }

        template<>
        void __deser<`t`>(ivy_deser& inp, `t`& qs)
        {
            std::string s;
            inp.get(s);
            paxos_adapter::AdaptedQSet::decode(s, qs);
        }

        template<>
        `t` _arg<`t`>(std::vector<ivy_value> &args, unsigned idx, long long bound)
        {
            throw "Not implemented";
        }

        >>>

    }
}
